<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.test.bus.mapper.OutportMapper" >
  <resultMap id="BaseResultMap" type="cn.test.bus.domain.Outport" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="providerid" property="providerid" jdbcType="INTEGER" />
    <result column="paytype" property="paytype" jdbcType="VARCHAR" />
    <result column="outputtime" property="outputtime" jdbcType="TIMESTAMP" />
    <result column="operateperson" property="operateperson" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="goodsid" property="goodsid" jdbcType="INTEGER" />
    <result column="outportprice" property="outportprice" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, providerid, paytype, outputtime, operateperson, number, remark, goodsid, outportprice
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bus_outport
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bus_outport
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.test.bus.domain.Outport" >
    insert into bus_outport (id, providerid, paytype, 
      outputtime, operateperson, number, 
      remark, goodsid, outportprice
      )
    values (#{id,jdbcType=INTEGER}, #{providerid,jdbcType=INTEGER}, #{paytype,jdbcType=VARCHAR}, 
      #{outputtime,jdbcType=TIMESTAMP}, #{operateperson,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{goodsid,jdbcType=INTEGER}, #{outportprice,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.test.bus.domain.Outport" >
    insert into bus_outport
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="providerid != null" >
        providerid,
      </if>
      <if test="paytype != null" >
        paytype,
      </if>
      <if test="outputtime != null" >
        outputtime,
      </if>
      <if test="operateperson != null" >
        operateperson,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="goodsid != null" >
        goodsid,
      </if>
      <if test="outportprice != null" >
        outportprice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="providerid != null" >
        #{providerid,jdbcType=INTEGER},
      </if>
      <if test="paytype != null" >
        #{paytype,jdbcType=VARCHAR},
      </if>
      <if test="outputtime != null" >
        #{outputtime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateperson != null" >
        #{operateperson,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="goodsid != null" >
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="outportprice != null" >
        #{outportprice,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.test.bus.domain.Outport" >
    update bus_outport
    <set >
      <if test="providerid != null" >
        providerid = #{providerid,jdbcType=INTEGER},
      </if>
      <if test="paytype != null" >
        paytype = #{paytype,jdbcType=VARCHAR},
      </if>
      <if test="outputtime != null" >
        outputtime = #{outputtime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateperson != null" >
        operateperson = #{operateperson,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="goodsid != null" >
        goodsid = #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="outportprice != null" >
        outportprice = #{outportprice,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.test.bus.domain.Outport" >
    update bus_outport
    set providerid = #{providerid,jdbcType=INTEGER},
      paytype = #{paytype,jdbcType=VARCHAR},
      outputtime = #{outputtime,jdbcType=TIMESTAMP},
      operateperson = #{operateperson,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      goodsid = #{goodsid,jdbcType=INTEGER},
      outportprice = #{outportprice,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <!-- 全查询 -->
   <select id="queryAllOutport" resultType="cn.test.bus.domain.Outport" parameterType="cn.test.bus.vo.OutportVo" >
select DISTINCT t2.providername,t3.goodsname,t1.*,t3.size as size from bus_outport t1 join bus_provider t2 join bus_goods t3  on(t1.providerid=t2.id and t1.goodsid=t3.id)    <where>
    <if test="goodsname!=null">
     and goodsname like "%"#{goodsname}"%"
    </if>
    <if test="providername!=null">
     and providername like "%"#{providername}"%"
    </if>
	<if test="providerid!=null">
    and t1.providerid=#{providerid}
	</if>
    </where>
    order by outputtime desc
  </select>
  
   <!-- 批量删除 -->
	<delete id="delOutports">
		delete from bus_outport
		where id in
		<foreach close=")" collection="array" index="index" item="item" open="(" separator=",">
			#{item}
		</foreach>
	</delete>
</mapper>